{{- if .Values.functions.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.functions.fullname" . }}
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
spec:
  {{- if not .Values.functions.autoscaling.enabled }}
  replicas: {{ .Values.functions.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supabase.functions.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.functions.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "supabase.functions.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.functions.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "supabase.functions.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.functions.podSecurityContext | nindent 8 }}
      containers:
        - args:
            - start
            - --main-service
            - /home/deno/functions/main
          name: {{ include "supabase.functions.name" $ }}
          securityContext:
            {{- toYaml .Values.functions.securityContext | nindent 12 }}
          image: "{{ .Values.functions.image.repository }}:{{ .Values.functions.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.functions.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.functions.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DB_HOSTNAME
              {{- if .Values.db.enabled }}
              value: {{ include "supabase.db.fullname" . }}
              {{- else }}
              value: $(DB_HOST)
              {{- end }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.password | default "password" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: password
                  {{- end }}
            - name: DB_PASSWORD_ENC
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.password | default "password" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: password_encoded
                  {{- end }}
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.database | default "database" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: database
                  {{- end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.jwt.secretRef }}
                  name: {{ .Values.secret.jwt.secretRef }}
                  key: {{ .Values.secret.jwt.secretRefKey.secret | default "secret" }}
                  {{- else }}
                  name: {{ include "supabase.secret.jwt" . }}
                  key: secret
                  {{- end }}
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.jwt.secretRef }}
                  name: {{ .Values.secret.jwt.secretRef }}
                  key: {{ .Values.secret.jwt.secretRefKey.anonKey | default "anonKey" }}
                  {{- else }}
                  name: {{ include "supabase.secret.jwt" . }}
                  key: anonKey
                  {{- end }}
            - name: SUPABASE_SERVICE_ROLE_KEY
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.jwt.secretRef }}
                  name: {{ .Values.secret.jwt.secretRef }}
                  key: {{ .Values.secret.jwt.secretRefKey.serviceKey | default "serviceKey" }}
                  {{- else }}
                  name: {{ include "supabase.secret.jwt" . }}
                  key: serviceKey
                  {{- end }}
            - name: POSTGRES_BACKEND_URL
              value: $(DB_DRIVER)://$(DB_USERNAME):$(DB_PASSWORD_ENC)@$(DB_HOSTNAME):$(DB_PORT)/$(DB_DATABASE)?search_path=auth&sslmode=$(DB_SSL)
          {{- with .Values.functions.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.functions.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.functions.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - mountPath: /home/deno/functions/main
              name: functions-main
          {{- with .Values.functions.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- with .Values.functions.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: functions-main
          configMap:
            name: {{ include "supabase.functions.fullname" . }}-main
      {{- with .Values.functions.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.functions.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.functions.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}