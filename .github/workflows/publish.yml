name: Publish
on:
  push:
    tags:
      - 'v*.*.*'
permissions:
  contents: read
jobs:
  publish_release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Checkout head
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      # TODO use later if we want multi-platform Docker builds
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: DockerHub Login
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: GitHub Container Registry Login
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
      - name: Get tag version
        id: git
        run: echo "tag_version=$(make version)" >> "$GITHUB_OUTPUT"
      - name: Get release notes
        id: release_notes
        run: make release-notes > .release_notes
      - name: Set up Syft
        uses: anchore/sbom-action/download-syft@da167eac915b4e86f08b264dbdbc867b61be6f0c # v0.20.5
      - name: Run goreleaser-action
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --clean --release-notes=.release_notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
      - name: Clear Docker login session
        run: rm -f ${HOME}/.docker/config.json
      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-checksums: dist/checksums.txt
      - name: Generate AUR PKGBUILD
        run: ./scripts/generate_aur_pkgbuild.sh ${{ steps.git.outputs.tag_version }}
      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@2ac5a4c1d7035885d46b10e3193393be8460b6f1 # v4.1.1
        with:
          pkgname: upcloud-cli
          pkgbuild: PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Release ${{ steps.git.outputs.tag_version }}
          force_push: true
