name: Publish
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  publish_release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout head
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0
      # TODO use later if we want multi-platform Docker builds
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2.7.0
      - name: DockerHub Login
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: GitHub Container Registry Login
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: 'go.mod'
      - name: Get tag version
        id: git
        run: echo "tag_version=$(make version)" >> "$GITHUB_OUTPUT"
      - name: Run goreleaser-action
        uses: goreleaser/goreleaser-action@b508e2e3ef3b19d4e4146d4f8fb3ba9db644a757 # v3.2.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
      - name: Clear Docker login session
        run: rm -f ${HOME}/.docker/config.json
      - name: Generate AUR PKGBUILD
        run: ./scripts/generate_aur_pkgbuild.sh ${{ steps.git.outputs.tag_version }}
      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@325b53d8bb2cacbb9194b68f6f377001c29c5584 # v2.4.1
        with:
          pkgname: upcloud-cli
          pkgbuild: PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Release ${{ steps.git.outputs.tag_version }}
          force_push: true
